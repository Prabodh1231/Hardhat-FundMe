{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f8d0aa539463f467855fcb508f3da4d57e3421824f047ecce9d50f99eada346",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1038330",
    "logsBloom": "0x
    "blockHash": "0x67ee8dddcb31b97ed4110142858eeea773ba4d3746fcb52e8b743348fa2a660c",
    "transactionHash": "0x9f8d0aa539463f467855fcb508f3da4d57e3421824f047ecce9d50f99eada346",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1038330",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "74bf93ffea31b79dc7c4506c3950a0f9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.18;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 3. Interfaces, Libraries, Contracts\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Patrick Collins\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events (we have none!)\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        require(msg.sender == i_owner, \\\"FundMe__NotOwner\\\");\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// @notice Funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // Transfer vs call vs Send\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x10955a633dcd2ba9882c9d6518a86be414207da0d60679c460a5c44a60ba8575\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xfd2cfd63e8ffd5b71bedf9021381e58fc19065c3d5ded28242d615fbadd6372f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012ee380380620012ee83398181016040528101906200003791906200011d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161116762000187600039600081816102cc015281816104680152818161050e01528181610699015261089801526111676000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b4c565b6101e9565b6040516100bf9190610b92565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610b92565b60405180910390f35b3480156100ff57600080fd5b506101086102ca565b005b34801561011657600080fd5b5061011f6104fd565b60405161012c9190610b92565b60405180910390f35b34801561014157600080fd5b5061014a61050a565b6040516101579190610bbc565b60405180910390f35b34801561016c57600080fd5b50610175610532565b6040516101829190610c36565b60405180910390f35b61019361055c565b005b3480156101a157600080fd5b506101aa610697565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c7d565b61092e565b6040516101e09190610bbc565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cbf565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f90610d49565b60405180910390fd5b60005b60008054905081101561040357600080828154811061037d5761037c610d69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fb90610dc7565b91505061035b565b50600067ffffffffffffffff81111561041f5761041e610e0f565b5b60405190808252806020026020018201604052801561044d5781602001602082028036833780820191505090505b5060009080519060200190610463929190610a42565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104aa90610e6f565b60006040518083038185875af1925050503d80600081146104e7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ec565b606091505b50509050806104fa57600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097590919063ffffffff16565b10156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610ed0565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062b9190610ef0565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610d49565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075e575b5050505050905060005b81518110156108335760008282815181106107d0576107cf610d69565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082b90610dc7565b9150506107b2565b50600067ffffffffffffffff81111561084f5761084e610e0f565b5b60405190808252806020026020018201604052801561087d5781602001602082028036833780820191505090505b5060009080519060200190610893929190610a42565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108da90610e6f565b60006040518083038185875af1925050503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b505090508061092a57600080fd5b5050565b600080828154811061094357610942610d69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610981836109b1565b90506000670de0b6b3a7640000858361099a9190610f24565b6109a49190610f95565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a23919061103e565b5050509150506402540be40081610a3a91906110b9565b915050919050565b828054828255906000526020600020908101928215610abb579160200282015b82811115610aba5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a62565b5b509050610ac89190610acc565b5090565b5b80821115610ae5576000816000905550600101610acd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1982610aee565b9050919050565b610b2981610b0e565b8114610b3457600080fd5b50565b600081359050610b4681610b20565b92915050565b600060208284031215610b6257610b61610ae9565b5b6000610b7084828501610b37565b91505092915050565b6000819050919050565b610b8c81610b79565b82525050565b6000602082019050610ba76000830184610b83565b92915050565b610bb681610b0e565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b6000819050919050565b6000610bfc610bf7610bf284610aee565b610bd7565b610aee565b9050919050565b6000610c0e82610be1565b9050919050565b6000610c2082610c03565b9050919050565b610c3081610c15565b82525050565b6000602082019050610c4b6000830184610c27565b92915050565b610c5a81610b79565b8114610c6557600080fd5b50565b600081359050610c7781610c51565b92915050565b600060208284031215610c9357610c92610ae9565b5b6000610ca184828501610c68565b91505092915050565b600081519050610cb981610c51565b92915050565b600060208284031215610cd557610cd4610ae9565b5b6000610ce384828501610caa565b91505092915050565b600082825260208201905092915050565b7f46756e644d655f5f4e6f744f776e657200000000000000000000000000000000600082015250565b6000610d33601083610cec565b9150610d3e82610cfd565b602082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd282610b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e0457610e03610d98565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e59600083610e3e565b9150610e6482610e49565b600082019050919050565b6000610e7a82610e4c565b9150819050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610eba601b83610cec565b9150610ec582610e84565b602082019050919050565b60006020820190508181036000830152610ee981610ead565b9050919050565b6000610efb82610b79565b9150610f0683610b79565b9250828201905080821115610f1e57610f1d610d98565b5b92915050565b6000610f2f82610b79565b9150610f3a83610b79565b9250828202610f4881610b79565b91508282048414831517610f5f57610f5e610d98565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa082610b79565b9150610fab83610b79565b925082610fbb57610fba610f66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe581610fc6565b8114610ff057600080fd5b50565b60008151905061100281610fdc565b92915050565b6000819050919050565b61101b81611008565b811461102657600080fd5b50565b60008151905061103881611012565b92915050565b600080600080600060a0868803121561105a57611059610ae9565b5b600061106888828901610ff3565b955050602061107988828901611029565b945050604061108a88828901610caa565b935050606061109b88828901610caa565b92505060806110ac88828901610ff3565b9150509295509295909350565b60006110c482611008565b91506110cf83611008565b92508282026110dd81611008565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561111557611114610d98565b5b828205841483151761112a57611129610d98565b5b509291505056fea2646970667358221220794fa163a7fc7b8e7775b1052ca809c129950059fd521250082cf7715fa96fc464736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b4c565b6101e9565b6040516100bf9190610b92565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610b92565b60405180910390f35b3480156100ff57600080fd5b506101086102ca565b005b34801561011657600080fd5b5061011f6104fd565b60405161012c9190610b92565b60405180910390f35b34801561014157600080fd5b5061014a61050a565b6040516101579190610bbc565b60405180910390f35b34801561016c57600080fd5b50610175610532565b6040516101829190610c36565b60405180910390f35b61019361055c565b005b3480156101a157600080fd5b506101aa610697565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c7d565b61092e565b6040516101e09190610bbc565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cbf565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f90610d49565b60405180910390fd5b60005b60008054905081101561040357600080828154811061037d5761037c610d69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fb90610dc7565b91505061035b565b50600067ffffffffffffffff81111561041f5761041e610e0f565b5b60405190808252806020026020018201604052801561044d5781602001602082028036833780820191505090505b5060009080519060200190610463929190610a42565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104aa90610e6f565b60006040518083038185875af1925050503d80600081146104e7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ec565b606091505b50509050806104fa57600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097590919063ffffffff16565b10156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610ed0565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062b9190610ef0565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610d49565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075e575b5050505050905060005b81518110156108335760008282815181106107d0576107cf610d69565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082b90610dc7565b9150506107b2565b50600067ffffffffffffffff81111561084f5761084e610e0f565b5b60405190808252806020026020018201604052801561087d5781602001602082028036833780820191505090505b5060009080519060200190610893929190610a42565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108da90610e6f565b60006040518083038185875af1925050503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b505090508061092a57600080fd5b5050565b600080828154811061094357610942610d69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610981836109b1565b90506000670de0b6b3a7640000858361099a9190610f24565b6109a49190610f95565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a23919061103e565b5050509150506402540be40081610a3a91906110b9565b915050919050565b828054828255906000526020600020908101928215610abb579160200282015b82811115610aba5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a62565b5b509050610ac89190610acc565b5090565b5b80821115610ae5576000816000905550600101610acd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1982610aee565b9050919050565b610b2981610b0e565b8114610b3457600080fd5b50565b600081359050610b4681610b20565b92915050565b600060208284031215610b6257610b61610ae9565b5b6000610b7084828501610b37565b91505092915050565b6000819050919050565b610b8c81610b79565b82525050565b6000602082019050610ba76000830184610b83565b92915050565b610bb681610b0e565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b6000819050919050565b6000610bfc610bf7610bf284610aee565b610bd7565b610aee565b9050919050565b6000610c0e82610be1565b9050919050565b6000610c2082610c03565b9050919050565b610c3081610c15565b82525050565b6000602082019050610c4b6000830184610c27565b92915050565b610c5a81610b79565b8114610c6557600080fd5b50565b600081359050610c7781610c51565b92915050565b600060208284031215610c9357610c92610ae9565b5b6000610ca184828501610c68565b91505092915050565b600081519050610cb981610c51565b92915050565b600060208284031215610cd557610cd4610ae9565b5b6000610ce384828501610caa565b91505092915050565b600082825260208201905092915050565b7f46756e644d655f5f4e6f744f776e657200000000000000000000000000000000600082015250565b6000610d33601083610cec565b9150610d3e82610cfd565b602082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd282610b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e0457610e03610d98565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e59600083610e3e565b9150610e6482610e49565b600082019050919050565b6000610e7a82610e4c565b9150819050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610eba601b83610cec565b9150610ec582610e84565b602082019050919050565b60006020820190508181036000830152610ee981610ead565b9050919050565b6000610efb82610b79565b9150610f0683610b79565b9250828201905080821115610f1e57610f1d610d98565b5b92915050565b6000610f2f82610b79565b9150610f3a83610b79565b9250828202610f4881610b79565b91508282048414831517610f5f57610f5e610d98565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa082610b79565b9150610fab83610b79565b925082610fbb57610fba610f66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe581610fc6565b8114610ff057600080fd5b50565b60008151905061100281610fdc565b92915050565b6000819050919050565b61101b81611008565b811461102657600080fd5b50565b60008151905061103881611012565b92915050565b600080600080600060a0868803121561105a57611059610ae9565b5b600061106888828901610ff3565b955050602061107988828901611029565b945050604061108a88828901610caa565b935050606061109b88828901610caa565b92505060806110ac88828901610ff3565b9150509295509295909350565b60006110c482611008565b91506110cf83611008565b92508282026110dd81611008565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561111557611114610d98565b5b828205841483151761112a57611129610d98565b5b509291505056fea2646970667358221220794fa163a7fc7b8e7775b1052ca809c129950059fd521250082cf7715fa96fc464736f6c63430008120033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}